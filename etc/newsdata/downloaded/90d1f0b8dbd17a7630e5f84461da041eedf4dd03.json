{"pub": "zdnet", "url": "https://www.zdnet.com/article/python-inspired-nim-version-1-0-of-the-programming-language-launches", "downloaded_at": "2019-09-24 13:55:45.788966+00:00", "title": "Python-inspired Nim: Version 1.0 of the programming language launches", "language": "en", "text": "Python eats up Java and is now chasing down JavaScript Python has attracted two million new developers over the past year.\n\nThe developers of the Nim programming language have released version 1.0, promising programmers a \"stable base\" for their code that won't be broken by future versions of Nim.\n\nNim is a statically typed program language that draws on concepts from languages like Modula-3, Delphi, Ada, C++, Python, Lisp, and Oberon.\n\nHowever since it's a compiled programming language with a static type system, it's also been compared to Rust, C++, and Go.\n\nThe Nim compiler can generate executables for distribution on Windows, Linux, BSD and macOS systems. It also compiles to C, C++ and JavaScript.\n\nNim features broad editor support that includes native Nim editor Aporia, Visual Studio Code, Emacs, and Vim.\n\nAs previously announced, Nim 1.0 is intended to be the long-term supported stable release that only gets bug fixes and new features in future on the condition they don't break backwards compatibility. However, that guarantee doesn't extend to fixing serious security vulnerabilities, which may break code.\n\nNim emerged in 2008 from German programmer Andreas Rumpf, who uses the name Araq on IRC and GitHub.\n\nAs he explains in a blogpost, the initial goal for Nim was as a \"simple small language\" that compiles to C and should be no more than 20,000 lines of code. It would rely on a macro system to fill in feature gaps in the small core.\n\nToday the compiler and standard library use around 140,000 lines of code.\n\n\"While the language is not nearly as small as I would like it to be, it turned out that meta programming cannot replace all the building blocks that a modern language needs to have,\" noted Rumpf.\n\nWith version 1.0 out, Rumpf's next focus for Nim will be to improve developer tooling, such as Nimsuggest, a code-completion engine for several code editors, the Nimble package manager, and the Nimpretty source-code formatting tool.\n\n\"I regard 'incremental recompilation' (IC) the next big milestone for the Nim compiler. IC will further speed up Nim's already fast compile-times and cache the results of macro expansions and other constructs,\" he noted.\n\nAccording to Nim developers, as of August there were more 1,000 packages available for Nim. and the group hopes to attract more in future.\n\nThere's been some interest in the release of Nim 1.0 on Hacker News, where a Nim contributor has offered a break-down of its origins, classification, and uses.\n\nWhile Nim can be used to write a kernel, it can also run on micro-controllers and other embedded systems. And since it compiles down to JavaScript, it can also be used for websites or to create games and applications.\n\nMore on programming languages", "description": "Programming language Nim 1.0 promises developers a stable base for code that future versions won't break.", "authors": ["Liam Tung"], "top_image": "https://zdnet2.cbsistatic.com/hub/i/r/2019/09/24/b532f011-d335-4ac4-8b5d-88c8c012db93/thumbnail/770x578/670260e1e795e11707493b94d5b3455f/computerusersofficeistock-874036172.jpg", "published_at": "2019-09-24"}