{"pub": "zdnet", "url": "https://www.zdnet.com/article/salesforce-why-we-ditched-python-for-googles-go-language-in-einstein-analytics", "downloaded_at": "2019-10-08 12:53:11.734476+00:00", "title": "Salesforce: Why we ditched Python for Google's Go language in Einstein Analytics", "language": "en", "text": "Python's rise asks questions of JavaScript's dominance Rise in queries driven by interest in Python and community of new programmers.\n\nSalesforce recently spent $15.7bn on analytics company Tableau to beef up its own Einstein Analytics platform. Clearly Salesforce sees analytics as critical for its future.\n\nBut before the company launched Einstein Analytics in 2017, it overhauled the backend and rebuilt it almost entirely on Google's popular Go, or 'Golang', programming language.\n\nAccording to Salesforce principal architect Guillaume Le Stum, before Salesforce launched Einstein Analytics, the query engine and dataset creation tools that eventually became Einstein Analytics were written in C \"for performance\" and a Python wrapper that provided functionality like parsing queries, and a REST API server.\n\n\"In essence, the product was built to have the best of both worlds,\" explains Le Stum in a post on Stack Overflow.\n\n\"Python is great for quickly writing higher-level applications but doesn't always deliver the high performance needed at an enterprise level. C creates highly performant executables, but adding features takes a lot more time.\"\n\nPython is of course hugely popular with developers, including engineers at Netflix who use Python across every part of its vast streaming infrastructure.\n\nBut before launch, Le Stum says the guts of Einstein Analytics started to show performance slowdowns because any new feature that wasn't part of the core query engine got loaded onto the Python wrapper.\n\nSo, while Salesforce could quickly develop and deploy features with Python, eventually the approach made it sluggish.\n\n\"Python doesn't do multi-threading very well, so the more the wrapper was being asked to do, the worse it performed,\" explains Le Stum.\n\nGo, on the other hand, is built for huge applications suitable for Google's production systems, so Salesforce decided to shift Einstein Analytics from a hybrid C-Python application to a completely Go application.\n\nLe Stum also identifies two more downsides of staying with Python, despite some of its advantages.\n\n\"First, Python uses loose typing, which was great for a small team rapidly developing new ideas and putting them into production \u2013but less great for an enterprise-scale application that some customers were paying millions of dollars for,\" he writes.\n\n\"Second, we foresaw a vast dependency nightmare on the horizon, as deploying the right Python libraries, versions, and files would become a chore. So in 2014, we decided to port the Python wrapper to Go.\"\n\nLe Stum says the strength of Go include its built-in tooling, quick compile times and deploys, and easy troubleshooting, as well as the way it makes code easy to understand.\n\n\"In Python, you could write super-elegant list comprehensions and beautiful code that's almost mathematical. But if you didn't write the code, then that elegance can come at the expense of readability,\" he explains, noting that in enterprise software, engineers spend more time reading code than writing it.\n\nThe group still had questions over Go's performance compared with C for the query engine. However, a proof of concept written in Go enabled them to proceed, and the Go version of Einstein Analytics reached general availability in 2018.\n\nOne of the big advantages is that Go's cross-platform features make porting code easy.\n\n\"If we ever need any of this code in a mobile app, we can cross-compile it to iOS or Android and it will just work,\" Le Stum notes.\n\nThe sole part of Einstein Analytics that isn't built with Go is the cluster manager, which is written in Java.\n\nMore on programming languages", "description": "Salesforce explains why Google's Go programming language is a better fit than Python and C for Einstein Analytics.", "authors": ["Liam Tung"], "top_image": "https://zdnet1.cbsistatic.com/hub/i/r/2019/10/08/95fd758a-9181-49bc-883e-6980d17783d5/thumbnail/770x578/19a21c21b1abd610eeca15338c152ac7/devsnightistock-1005631074.jpg", "published_at": "2019-10-08"}