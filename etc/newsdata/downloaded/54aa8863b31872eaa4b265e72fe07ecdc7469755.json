{"pub": "arstechnica", "url": "https://arstechnica.com/information-technology/2019/10/forum-cracks-the-vintage-passwords-of-ken-thompson-and-other-unix-pioneers", "downloaded_at": "2019-10-10 15:00:45.357756+00:00", "title": "Forum cracks the vintage passwords of Ken Thompson and other Unix pioneers", "language": "en", "text": "As one of the original versions of Unix, BSD is an ancient operating system. So it shouldn\u2019t come as a surprise that it used what are, by today\u2019s standards, strange, even ridiculous security. For one, the hashing function protecting passwords, though state of the art 40 years ago, is now trivial to crack. Stranger still, the password hashes of some BSD creators were included in publicly available source code. And then, there are the passwords people chose.\n\nLast week, technologist Leah Neukirchen reported finding a source tree for BSD version 3, circa 1980, and successfully cracking passwords of many of computing\u2019s early pioneers. In most of the cases the success was the result of the users choosing easy-to-guess passwords.\n\nBSD co-inventor Dennis Ritchie, for instance, used \u201cdmac\u201d (his middle name was MacAlistair); Stephen R. Bourne, creator of the Bourne shell command line interpreter, chose \u201cbourne\u201d; Eric Schmidt, an early developer of Unix software and now the executive chairman of Google parent company Alphabet, relied on \u201cwendy!!!\u201d (the name of his wife); and Stuart Feldman, author of Unix automation tool make and the first Fortran compiler, used \u201caxolotl\u201d (the name of a Mexican salamander).\n\nWeakest of all was the password for Unix contributor Brian W. Kernighan: \u201c/.,/.,\u201d\u2014representing a three-character string repeated twice using adjacent keys on a QWERTY keyboard. (None of the passwords included the quotation marks.)\n\nBut there were at least five plaintext passwords that remained out of reach. They included those belonging to Turkish computer scientist \u00d6zalp Babao\u011flu, Unix software developer Howard Katseff, and crucial Unix contributors Tom London and Bob Fabry. But the uncracked hash that seemed to occupy Neukirchen the longest was the password used by Ken Thompson, another Unix co-inventor.\n\n\u201cI never managed to crack ken's password with the hash ZghOT0eRm4U9s, and I think I enumerated the whole 8 letter lowercase + special symbols key space,\u201d Neukirchen reported in the above-linked thread, posted to the Unix Heritage Society mailing list. \u201cAny help is welcome.\u201d\n\nFrom cutting edge to dangerously obsolete\n\nI\u2019ll get to the results later, but first, a discussion of Descrypt, the default hashing algorithm for the BSD 3 operating system. When it debuted in 1979, Descrypt represented the cutting edge of password hashing. Chief among the improvements: it was the first hashing function to use cryptographic salt\u2014which is a randomly chosen text string appended to the password\u2014designed to prevent identical plaintext inputs from having the same hash string. It was also the first to subject plaintext inputs to multiple hashing iterations. With 25 iterations, this so-called key-stretching process significantly increased the time and computation required for attackers to crack the hashes.\n\nDescrypt was deprecated more than 20 years ago, however, as cracking tools grew ever more powerful and better functions came into being. By today\u2019s standards, Descrypt is woefully inadequate (though sadly sometimes still used, much to end users\u2019 detriment).\n\nDescrypt limits passwords to just eight characters, a constraint that makes it all but impossible for end users to choose truly strong credentials. And the salt Descrypt uses provides just 12 bits of entropy, the equivalent of two printable characters. That tiny salt space makes it likely that large databases will contain thousands of hash strings that attackers can crack simultaneously, since the hash strings use the same salt.\n\nJeremi M. Gosney, a password security expert and CEO of the password-cracking firm Terahash, told Ars that Descrypt is so weak and antiquated that one of his company\u2019s 10-GPU Inmanis appliances (price: almost $32,000) could besiege a Descrypt hash with 14.5 billion guesses per second (the rigs can be clustered to achieve faster results). The speed of just one rig is enough to brute force the entire Descrypt keyspace\u2014which, due to practical limitations, was about 249 in 1979\u2014in less than 10 hours, and even less time when using cracking tools, such as wordlists, masks, and mangling rules. This site will also crack a Descrypt hashe for as little as $100.\n\nThe weaknesses meant it was inevitable the remaining uncracked hashes Neukirchen posted would be deciphered. But since most of the fellow forum members weren\u2019t seasoned password crackers, they seemed to use less efficient techniques. On Wednesday\u2014six days after Neukirchen asked for help\u2014forum member Nigel Williams provided Thompson\u2019s plaintext password: \u201cp/q2-q4!\u201d (not including the quotation marks).\n\nCheckmate\n\nIt \u201ctook 4+ days on an AMD Radeon Vega64 running hashcat at about 930MH/s during that time (those familiar know the hash-rate fluctuates and slows down towards the end),\u201d Williams reported. An AMD Radeon Vega64 is a graphics card and Hashcat is a password-cracking program that takes advantage of the powerful parallel-computing capabilities of graphics cards.\n\nA few hours after Williams\u2019 message, forum member Arthur Krewat provided the passwords for the four remaining uncracked hashes. They were:\n\nKatseff: graduat;\n\nBabao\u011flu: 12ucdort\n\nFabry: 561cml..\n\nLondon:..pnn521\n\nForum members quickly pointed out that Thompson\u2019s password \u201cp/q2-q4!\u201d is the descriptive notation for a common opening move in the game of Chess.\n\n\u201cIf I remember right,\u201d another forum member chimed in, \u201cthe first half of this password was on a t-shirt commemorating Belle's first half-move, although its notation may have been different.\u201d Belle was the name of the Chess machine developed by Thompson and Joseph Henry 'Joe' Condon. Rob Pike\u2014the forum member who worked on Unix projects while at Bell Labs\u2014then moved on to a different topic not yet brought up in the discussion:\n\nInteresting though it is, though, I find this hacking distasteful. It was distasteful back when, and it still is. The attitudes around hackery have changed; the position nowadays seems to be that the bad guys are doing it so the good guys should be rewarded for doing it first. That's disingenuous at best, and dangerous at worst.\n\nIt\u2019s an interesting thought and raises a good point about the ethics of dredging up the passwords of real people. Ultimately, however, I find myself leaning in favor of studying password cracking. Over the past decade, researchers from universities and elsewhere have pored over cracked passwords . The net result: we know much more now than we did a decade ago about choosing a strong password. Forum member Kurt H Maier phrased things well in a response to Pike.\n\n\u201cIt's not like we're sitting around rainbow-tabling someone's Macbook,\u201d Maier wrote. \u201cThis stuff is, at this point, of historical interest. \u2018How many decades old must a hash be before it's acceptable to decode it\u2019 is a valid question worth answering, but comparing this kind of archaeology to active attack is slightly absurd.\u201d\n\nJust the same, here\u2019s hoping Eric Schmidt and company have changed those vintage passwords.", "description": "Security in the early days of Unix was poor. Then, there were the passwords.", "authors": ["Dan Goodin"], "top_image": "https://cdn.arstechnica.net/wp-content/uploads/2019/10/unearthing-passwords-760x380.jpg", "published_at": "2019-10-10"}