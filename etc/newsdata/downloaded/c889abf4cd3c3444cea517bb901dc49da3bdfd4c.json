{"pub": "zdnet", "url": "https://www.zdnet.com/article/github-security-alerts-now-support-php-projects", "downloaded_at": "2019-09-18 23:24:29.426087+00:00", "title": "GitHub security alerts now support PHP projects", "language": "en", "text": "Code hosting website GitHub announced today plans to add support for a Dependency Graph for Composer-based PHP projects.\n\nSince the Dependency Graph feature is intertwined with the Security Alerts (Vulnerability Alerts) feature, this also means GitHub users will also be eligible to receive automatic security alerts for any vulnerabilities that crop up in the dependencies of their PHP projects.\n\nHow Security Alerts works\n\nThe Security Alerts feature is one of GitHub's most useful services. It works by (GitHub) scanning the dependency tree (generated by the Dependency Graph feature) for a user's project.\n\nThe scanner looks at the dependency's name and version number and compares it to a list of known vulnerabilities that GitHub pools from various sources.\n\nIf GitHub finds a vulnerability in any of the dependencies, the Security Alerts feature warns the project owner through various methods, such as:\n\nA banner in the GitHub interface\n\nWeb notifications on the GitHub domain\n\nEmail notifications for each new vulnerability\n\nDaily or weekly email digests of all new vulnerabilities\n\nGitHub launched the Security Alerts feature to great success in November 2017 for JavaScript and Ruby projects and later expanded it to Python projects in July 2018. In October 2018, it expanded the feature further to Java and .NET projects.\n\nPHP support had been a long time coming, since PHP has been a popular programming language for GitHub hosted projects for years, ranking third and fourth in recent years.\n\nImage: GitHub\n\nBut the Dependency Graph and the Security Alerts feature won't work for all PHP projects. It will only work for PHP projects coded to work with Composer projects. Composer is a package manager for automatically importing PHP libraries into a PHP project.\n\nAfter today's announcements, the current support scheme for the Dependency Graph and integrated Security Alerts feature is as follows:\n\nPackage manager Languages Recommended formats Supported formats Maven Java, Scala pom.xml pom.xml npm JavaScript package-lock.json package-lock.json, package.json Yarn JavaScript yarn.lock package.json, yarn.lock Nuget .NET languages (C#, C++, F#, VB) .csproj, .vbproj, .nuspec, .vcxproj, .fsproj .csproj, .vbproj, .nuspec, .vcxproj, .fsproj, packages.config Python PIP Python requirements.txt, pipfile.lock requirements.txt, pipfile.lock, setup.py* RubyGems Ruby Gemfile.lock Gemfile.lock,Gemfile, *.gemspec Composer PHP composer.lock composer.json, composer.lock\n\nGitHub users who'd like to enable Dependency Graph and Security Alerts for their repos can find more info here.\n\nGitHub buys Semmle and becomes a CVE CNA\n\nIn other GitHub news, the Microsoft-owned code-hosting site also announced a new toy today, with the acquisition of Semmle, a security analysis platform.\n\nIn a lengthy post, Microsoft said it planned to use Semmle's code scanning features to improve GitHub's vulnerability scanning process.\n\nIn addition, GitHub also announced today that it received a certification as a CVE Numbering Authority (CNA), which means GitHub will be able to automatically assign CVE numbers -- identifiers for security flaws -- on its own.\n\nThis certification is only valid for open source projects hosted on the platform, which means bugs reported on an open source project's bug tracker will receive a CVE identifier much faster, as the project owner can request a CVE from GitHub, rather than go through the more crowded and time-consuming approval process over at MITRE.", "description": "GitHub is now also a CVE CNA and can issue its own CVE numbers for bugs disclosed in projects hosted on the platform.", "authors": ["Catalin Cimpanu"], "top_image": "https://zdnet4.cbsistatic.com/hub/i/r/2018/10/14/8cb090a5-da9d-47c8-b769-e1a9692a5c62/thumbnail/770x578/849c80cda3b52bf3fbbaec0c39f0c8db/php.png", "published_at": "2019-09-18"}