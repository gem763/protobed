{"pub": "businessinsider", "url": "https://lifehacker.com.au/2019/10/solve-your-own-problems-with-the-rubber-duck-trick", "downloaded_at": "2019-10-09 02:15:37.201915+00:00", "title": "Solve Your Own Problems With The Rubber Duck Trick", "language": "en", "text": "Photo: Shutterstock\n\nHave you ever started asking someone to help you solve a problem, and halfway through, you figure it out yourself? It feels great. It feels even better when you learn to do it on purpose \u2014 and when you learn to do it without wasting another person\u2019s time.\n\nIn the coding world, this is called \u201crubber duck debugging.\u201d It\u2019s when you come up against a problem, and instead of immediately rushing to ask for help, you think through your problem. Because coders are weirdos, they have a tradition of asking a rubber duck.\n\nOne version of the rubber duck story has a boss who directs his employees to talk to a taxidermied duck. He makes them ask the duck their questions, questions he is sick of answering. And one engineer discovers that just by explaining their question to the duck, they discover the answer. All they had to do was put their problem into words.\n\nYou\u2019ll get better at solving your own problems if you get better at asking questions. Coder Jeff Atwood built this concept into his sites Stack Overflow and Stack Exchange. He wanted to make sure that people asked their questions in a way that others could actually answer, without a bunch of followup questions.\n\nSo he wrote some requirements for a good question. Here\u2019s an adapted version to help you solve your own problem. Each step might be the last. But if you\u2019re still stuck, move onto the next.\n\n1. Put your question into words\n\nSometimes, you only need to slow your thoughts down and you\u2019ll find your answer. You do this by putting your problem into words: saying it out loud, or writing it down.\n\nYou can\u2019t cheat this one \u2014 if you try to silently \u201ctalk in your head,\u201d you have to spend energy focusing on your own thoughts. Type it in a notes app, or talk to your voice memos, or just pretend to talk on the phone if it helps you feel less silly.\n\n2. Add detail\n\nBack up. What were you doing before your problem started? Move forward. What\u2019s the first step you\u2019d take if your problem can\u2019t be solved?\n\nLook at each word of your question and see if you could define it for a non-expert. (Imagine you\u2019re explaining the problem to your parents, or to your kids.)\n\nAdd context. For a tech question, you should always mention what browser, device, and OS version you\u2019re using, and what plugins, extensions, apps, or peripherals might be interfering. Extend that to any kind of question. If you have a time management problem, list all your time commitments. If you have a money issue, list your incomes, expenses, debts, delays in payment and so on.\n\nWrite all these answers down with your original question. Sort them into some coherent order.\n\n3. State your goal\n\nSometimes you\u2019ve explained what\u2019s wrong, but not what would be right. Explain what you hoped would happen that hasn\u2019t happened \u2014 and why the current situation isn\u2019t desirable.\n\nElaborate on what kind of solution you want, and what you would do with it when you got it. Explain which solutions don\u2019t work for you. (Tech help forums are littered with unacceptable \u201csolutions\u201d rejected by the asker.)\n\n4. Share your research\n\nYou need, of course, to do your research. You aren\u2019t one of those cretins who tweets a question instead of googling. List the places you searched, the resources you consulted, the info they had and didn\u2019t have.\n\nIf you already asked someone for help, explain what they accomplished and didn\u2019t accomplish, or why they didn\u2019t understand your problem.\n\n5. Ask your question\n\nBy now you\u2019ve done a lot of work, and if you haven\u2019t answered your own question, you\u2019re frustrated. The good news is, you\u2019ve written down a very good version of your question, and now you can ask it of a colleague, a boss, an advisor, a forum.\n\nAnd if you solved the problem? Take your writeup and make it a blog post, or a Reddit post, or a tweet with a screenshot of your Notes app. Let all bow to your wisdom. You are a thought leader.", "description": "Have you ever started asking someone to help you solve a problem, and halfway through, you figure it out yourself? It feels great. It feels even better when you learn to do it on purpose \u2014 and when you learn to do it without wasting another person\u2019s time....", "authors": ["Sarah Basford", "Chris Jager"], "top_image": "https://i.kinja-img.com/gawker-media/image/upload/c_lfill,w_1200,h_628,q_90/zjld1cpzmlduosqh3p9n.jpg", "published_at": "2019-10-09"}