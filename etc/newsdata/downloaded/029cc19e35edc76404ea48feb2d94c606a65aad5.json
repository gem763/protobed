{"pub": "zdnet", "url": "https://www.zdnet.com/article/these-software-vulnerabilities-top-mitres-most-dangerous-list-in-2019", "downloaded_at": "2019-09-18 12:50:10.813440+00:00", "title": "These software vulnerabilities top MITRE\u2019s most dangerous list", "language": "en", "text": "Newly uncovered vulnerability puts Windows computers at risk Researchers detail hardware vulnerability that bypasses mitigations against Spectre and Meltdown CPU vulnerabilities on Windows systems - and impacts all systems using Intel processors manufactured since 2012.\n\nMITRE has released a list of the top 25 most dangerous software weaknesses and errors that can be exploited by attackers to compromise our systems.\n\nThe non-profit's 2019 Common Weakness Enumeration (CWE) Top 25 Most Dangerous Software Errors report is a compilation of errors, bugs, and potential attack vectors developers should make sure they are familiar with in the interest of security.\n\nRanging from improper certificate validation to memory buffer overflow errors, these software flaws can be used during attack chains to hijack vulnerable systems, cause data leaks, launch denial-of-service (DoS) attacks, and potentially seize control of software as an avenue for wider attacks against PCs and networked devices.\n\nMITRE's list focuses on CWEs, which are baseline software security weaknesses that may become precursors to CVEs -- specific vulnerabilities found in vendor software that can be reported, addressed, and made public.\n\nThe group says that CWE lists can serve as \"a common baseline standard for weakness identification, mitigation, and prevention efforts.\"\n\nThe list, receiving its first update since 2011, has been generated through a new approach. The original 2011 report relied upon surveys and interviews, whereas the 2019 Top 25 is data-driven.\n\nIn this year's roundup, MITRE pulled CVE data from its database alongside information obtained from the National Institute of Standards and Technology (NIST)'s National Vulnerability Database (NVD) and the Common Vulnerability Scoring System (CVSS).\n\nSee also: Financial asset firm PCI ordered to pay $1.5 million for poor cybersecurity practices\n\nA scoring algorithm was then applied to create the list of the most common and severe software issues discovered in 2017 and 2018. In total, roughly 25,000 CVEs provided source data.\n\nHowever, it is worth noting that the list does contain some bias due to the omission of vulnerabilities found and fixed before public release, as well as CVE advisories in which only the impact but not the full technical details have been shared -- or when the language used by vendors is difficult to analyze, resulting in the dismissal of at least 2,600 CVEs.\n\nIn addition, detection tools are more likely to find and analyze some specific classes of software errors rather than others which may result in under-representation, and the scoring system is known to inadvertently prioritize implementation flaws over design flaws.\n\nThe most dangerous software error, according to MITRE, is CWE-119, described as the \"Improper Restriction of Operations within the Bounds of a Memory Buffer.\" In other words, when software will perform tasks on a memory buffer but is also able to read or write from a location outside of the buffer's boundaries.\n\nIf exploited, attackers may be able to execute arbitrary code, hijack systems, steal sensitive data, or cause system crashes.\n\nIn second place is CWE-79, the \"Improper Neutralization of Input During Web Page Generation\" -- also known as cross-site scripting (XSS). XSS vulnerabilities are common and often caused by the failure to properly control or neutralize user input on a web page.\n\nCNET: The pivot to privacy could come with a $100 million grant\n\nMITRE says that XSS bugs can form when web requests are not managed securely, leading to websites generating pages containing potentially malicious data and serving it to visitors, where code may be injected into a browser session.\n\nThere are three types of XSS issue. Reflected XSS occurs when data is read directly from HTTP requests and reflected back; stored XSS is described as when malicious code is stored in a database and read back into an application dynamically, and DOM-Based XSS compromise can take place when a DOM environment is tampered with through a client-side script.\n\nIn successful XSS-based attacks, threat actors may be able to eavesdrop on communication, conduct phishing and send visitors to malicious domains, and in some cases, drive-by hacking may also be possible on vulnerable machines.\n\nIn third, \"Improper Input Validation,\" CWE-20, occurs when software either fails to validate or incorrectly validates input. When this takes place, attackers can craft input to tamper with data flows, potentially leading to hijacked software, elevated levels of control, or code execution.\n\nTechRepublic: DNS amplification attacks increase by 1,000% since 2018\n\nThe fourth most common and severe issue impacting software security today is \"Information Exposure,\" marked as CWE-200. This broad term encapsulates software flaws which lead to the leak of sensitive information related to functionality, products, and environments. Information disclosure can be caused by errors such as PHP scripting problems and cryptography timing errors.\n\nThe fifth most prevalent issue is CWE-125, or out-of-bounds read. If software has coding errors which permit the system to read either past the end or before the beginning of a buffer, this can be exploited for the purposes of information leaks and crashes.\n\nAlso featured on MITRE's Top 25 list are errors including SQL injections, cross-site request forgery (CSRF), use-after-free flaws, improper authentication problems, and incorrect permission assignments.\n\nThe full MITRE Top 25 list is below.\n\nPrevious and related coverage\n\nHave a tip? Get in touch securely via WhatsApp | Signal at +447713 025 499, or over at Keybase: charlie0", "description": "The Top 25 list gives developers indicators of what cybersecurity threats they should be most aware of.", "authors": ["Charlie Osborne"], "top_image": "https://zdnet1.cbsistatic.com/hub/i/r/2019/09/18/a37bcccf-9e22-460c-8e6f-2a8f8fdd0f0f/thumbnail/770x578/9affc16dc586a6d7e98657ab8310153f/screenshot-2019-09-18-at-08-12-36.png", "published_at": "2019-09-18"}