{"pub": "techcrunch", "url": "https://techcrunch.com/2019/10/26/quantum-computings-hello-world-moment", "downloaded_at": "2019-10-26 23:57:41.069785+00:00", "title": "Quantum computing\u2019s \u2018Hello World\u2019 moment \u2013 TechCrunch", "language": "en", "text": "Does quantum computing really exist? It\u2019s fitting that for decades this field has been haunted by the fundamental uncertainty of whether it would, eventually, prove to be a wild goose chase. But Google has collapsed this nagging superposition with research not just demonstrating what\u2019s called \u201cquantum supremacy,\u201d but more importantly showing that this also is only the very beginning of what quantum computers will eventually be capable of.\n\nThis is by all indications an important point in computing, but it is also very esoteric and technical in many ways. Consider, however, that in the 60s, the decision to build computers with electronic transistors must have seemed rather an esoteric point as well. Yet that was in a way the catalyst for the entire Information Age.\n\nMost of us were not lucky enough to be involved with that decision or to understand why it was important at the time. We are lucky enough to be here now \u2014 but understanding takes a bit of explanation. The best place to start is perhaps with computing and physics pioneers Alan Turing and Richard Feynman.\n\n\u2018Because nature isn\u2019t classical, dammit\u2019\n\nThe universal computing machine envisioned by Turing and others of his generation was brought to fruition during and after World War II, progressing from vacuum tubes to hand-built transistors to the densely packed chips we have today. With it evolved an idea of computing that essentially said: If it can be represented by numbers, we can simulate it.\n\nThat meant that cloud formation, object recognition, voice synthesis, 3D geometry, complex mathematics \u2014 all that and more could, with enough computing power, be accomplished on the standard processor-RAM-storage machines that had become the standard.\n\nBut there were exceptions. And although some were obscure things like mathematical paradoxes, it became clear as the field of quantum physics evolved that it may be one of them. It was Feynman who proposed in the early 80s that if you want to simulate a quantum system, you\u2019ll need a quantum system to do it with.\n\n\u201cI\u2019m not happy with all the analyses that go with just the classical theory, because nature isn\u2019t classical, dammit, and if you want to make a simulation of nature, you\u2019d better make it quantum mechanical,\u201d he concluded, in his inimitable way. Classical computers, as he deemed what everyone else just called computers, were insufficient to the task.\n\nThe problem? There was no such thing as a quantum computer, and no one had the slightest idea how to build one. But the gauntlet had been thrown, and it was like catnip to theorists and computer scientists, who since then have vied over the idea.\n\nCould it be that with enough ordinary computing power, power on a scale Feynman could hardly imagine \u2014 data centers with yottabytes of storage and exaflops of processing \u2014 we can in fact simulate nature down to its smallest, spookiest levels?\n\nOr could it be that with some types of problems you hit a wall, and that you can put every computer on Earth to a task and the progress bar will only tick forward a percentage point in a million years, if that?\n\nAnd, if that\u2019s the case, is it even possible to create a working computer that can solve that problem in a reasonable amount of time?\n\nIn order to prove Feynman correct, you would have to answer all of these questions. You\u2019d have to show that there exists a problem that is not merely difficult for ordinary computers, but that is effectively impossible for them to solve even at incredible levels of power. And you would have to not just theorize but create a new computer that not just can but does solve that same problem.\n\nBy doing so you would not just prove a theory, you would open up an entirely new class of problem-solving, of theories that can be tested. It would be a moment when an entirely new field of computing first successfully printed \u201chello world\u201d and was opened up for everyone in the world to use. And that is what the researchers at Google and NASA claim to have accomplished.\n\nIn which we skip over how it all actually works\n\nMuch has already been written on how quantum computing differs from traditional computing, and I\u2019ll be publishing another story soon detailing Google\u2019s approach. But some basics bear mentioning here.\n\nClassical computers are built around transistors that, by holding or vacating a charge, signify either a 1 or a 0. By linking these transistors together into more complex formations they can represent data, or transform and combine it through logic gates like AND and NOR. With a complex language specific to digital computers that has evolved for decades, we can make them do all kinds of interesting things.\n\nQuantum computers are actually quite similar in that they have a base unit that they perform logic on to perform various tasks. The difference is that the unit is more complex: a qubit, which represents a much more complex mathematical space than simply 0 or 1. Instead you may think of their state may be thought of as a location on a sphere, a point in 3D space. The logic is also more complicated, but still relatively basic (and helpfully still called gates): That point can be adjusted, flipped, and so on. Yet the qubit when observed is also digital, providing what amounts to either a 0 or 1 value.\n\nBy virtue of representing a value in a richer mathematical space, these qubits and manipulations thereof can perform new and interesting tasks, including some which, as Google shows, we had no ability to do before.\n\nA quantum of contrivance\n\nIn order to accomplish the tripartite task summarized above, first the team had to find a task that classical computers found difficult but that should be relatively easy for a quantum computer to do. The problem they settled on is in a way laughably contrived: Being a quantum computer.\n\nIn a way it makes you want to just stop reading, right? Of course a quantum computer is going to be better at being itself than an ordinary computer will be. But it\u2019s not actually that simple.\n\nThink of a cool old piece of electronics \u2014 an Atari 800. Sure, it\u2019s very good at being itself and running its programs and so on. But any modern computer can simulate an Atari 800 so well that it could run those programs in orders of magnitude less time. For that matter, a modern computer can be simulated by a supercomputer in much the same way.\n\nFurthermore, there are already ways of simulating quantum computers \u2014 they were developed in tandem with real quantum hardware so performance could be compared to theory. These simulators and the hardware they simulate differ widely, and have been greatly improved in recent years as quantum computing became more than a hobby for major companies and research institutions.\n\nTo be specific, the problem was simulating the output of a random sequence of gates and qubits in a quantum computer. Briefly stated, when a circuit of qubits does something, the result is, like other computers, a sequence of 0s and 1s. If it isn\u2019t calculating something in particular, those numbers will be random \u2014 but crucially, they are \u201crandom\u201d in a very specific, predictable way.\n\nThink of a pachinko ball falling through its gauntlet of pins, holes and ramps. The path it takes is random in a way, but if you drop 10,000 balls from the exact same position into the exact same maze, there will be patterns in where they come out at the bottom \u2014 a spread of probabilities, perhaps more at the center and less at the edges. If you were to simulate that pachinko machine on a computer, you could test whether your simulation is accurate by comparing the output of 10,000 virtual drops with 10,000 real ones.\n\nIt\u2019s the same with simulating a quantum computer, though of course rather more complex. Ultimately however the computer is doing the same thing: simulating a physical process and predicting the results. And like the pachinko simulator, its accuracy can be tested by running the real thing and comparing those results.\n\nBut just as it is easier to simulate a simple pachinko machine than a complex one, it\u2019s easier to simulate a handful of qubits than a lot of them. After all, qubits are already complex. And when you get into questions of interference, slight errors and which direction they\u2019d go, etc. \u2014 there are, in fact, so many factors that Feynman decided at some point you wouldn\u2019t be able to account for them all. And at that point you would have entered the realm where only a quantum computer can do so \u2014 the realm of \u201cquantum supremacy.\u201d\n\nExponential please, and make it a double\n\nAfter 1,400 words, there\u2019s the phrase everyone else put right in the headline. Why? Because quantum supremacy may sound grand, but it\u2019s only a small part of what was accomplished, and in fact this result in particular may not last forever as an example of having reached those lofty heights. But to continue.\n\nGoogle\u2019s setup, then, was simple. Set up randomly created circuits of qubits, both in its quantum computer and in the simulator. Start simple with a few qubits doing a handful of operational cycles and compare the time it takes to produce results.\n\nBear in mind that the simulator is not running on a laptop next to the fridge-sized quantum computer, but on Summit \u2014 a supercomputer at Oak Ridge National Lab currently rated as the most powerful single processing system in the world, and not by a little. It has 2.4 million processing cores, a little under 3 petabytes of memory, and hits about 150 petaflops.\n\nAt these early stages, the simulator and the quantum computer happily agreed \u2014 the numbers they spat out, the probability spreads, were the same, over and over.\n\nBut as more qubits and more complexity got added to the system, the time the simulator took to produce its prediction increased. That\u2019s to be expected, just like a bigger pachinko machine. At first the times for actually executing the calculation and simulating it may have been comparable \u2014 a matter of seconds or minutes. But those numbers soon grew hour by hour as they worked their way up to 54 qubits.\n\nWhen it got to the point where it took the simulator five hours to verify the quantum computer\u2019s result, Google changed its tack. Because more qubits isn\u2019t the only way quantum computing gets more complex (and besides, they couldn\u2019t add any more to their current hardware). Instead, they started performing more rounds of operations with a given circuit, which adds all kinds of complexity to the simulation for a lot of reasons that I couldn\u2019t possibly explain.\n\nFor the quantum computer, doing another round of calculations takes a fraction of a second, and even multiplied by thousands of times to get the required number of runs to produce usable probability numbers, it only ended up taking the machine several extra seconds.\n\nFor the simulator, verifying these results took a week \u2014 a week, on the most powerful computer in the world.\n\nAt that point the team had to stop doing the actual simulator testing, since it was so time-consuming and expensive. Yet even so, no one really claimed that they had achieved \u201cquantum supremacy.\u201d After all, it may have taken the biggest classical computer ever created thousands of times longer, but it was still getting done.\n\nSo they cranked the dial up another couple notches. 54 qubits, doing 25 cycles, took Google\u2019s Sycamore system 200 seconds. Extrapolating from its earlier results, the team estimated that it would take Summit 10,000 years.\n\nWhat happened is what the team called double exponential increase. It turns out that adding qubits and cycles to a quantum computer adds a few microseconds or seconds every time \u2014 a linear increase. But every qubit you add to a simulated system makes that simulation exponentially more costly to run, and it\u2019s the same story with cycles.\n\nImagine if you had to do whatever number of push-ups I did, squared, then squared again. If I did 1, you would do 1. If I did 2, you\u2019d do 16. So far no problem. But by the time I get to 10, I\u2019d be waiting for weeks while you finish your 10,000 push-ups. It\u2019s not exactly analogous to Sycamore and Summit, since adding qubits and cycles had different and varying exponential difficulty increases, but you get the idea. At some point you can have to call it. And Google called it when the most powerful computer in the world would still be working on something when in all likelihood this planet will be a smoking ruin.\n\nIt\u2019s worth mentioning here that this result does in a way depend on the current state of supercomputers and simulation techniques, which could very well improve. In fact IBM published a paper just before Google\u2019s announcement suggesting that theoretically it could reduce the time necessary for the task described significantly. But it seems unlikely that they\u2019re going to improve by multiple orders of magnitude and threaten quantum supremacy again. After all, if you add a few more qubits or cycles, it gets multiple orders of magnitude harder again. Even so, advances on the classical front are both welcome and necessary for further quantum development.\n\n\u2018Sputnik didn\u2019t do much, either\u2019\n\nSo the quantum computer beat the classical one soundly on the most contrived, lopsided task imaginable, like pitting an apple versus an orange in a \u201cbest citrus\u201d competition. So what?\n\nWell, as founder of Google\u2019s Quantum AI lab Hartmut Neven pointed out, \u201cSputnik didn\u2019t do much either. It just circled the Earth and beeped.\u201d And yet we always talk about an industry having its \u201cSputnik moment\u201d \u2014 because that was when something went from theory to reality, and began the long march from reality to banality.\n\nThat seemed to be the attitude of the others on the team I talked with at Google\u2019s quantum computing ground zero near Santa Barbara. Quantum superiority is nice, they said, but it\u2019s what they learned in the process that mattered, by confirming that what they were doing wasn\u2019t pointless.\n\nBasically it\u2019s possible that a result like theirs could be achieved whether or not quantum computing really has a future. Pointing to one of the dozens of nearly incomprehensible graphs and diagrams I was treated to that day, hardware lead and longtime quantum theorist John Martines explained one crucial result: The quantum computer wasn\u2019t doing anything weird and unexpected.\n\nThis is very important when doing something completely new. It was entirely possible that in the process of connecting dozens of qubits and forcing them to dance to the tune of the control systems, flipping, entangling, disengaging, and so on \u2014 well, something might happen.\n\nMaybe it would turn out that systems with more than 14 entangled qubits in the circuit produce a large amount of interference that breaks the operation. Maybe some unknown force would cause sequential qubit photons to affect one another. Maybe sequential gates of certain types would cause the qubit to decohere and break the circuit. It\u2019s these unknown unknowns that have caused so much doubt over whether, as asked at the beginning, quantum computing really exists as anything more than a parlor trick.\n\nImagine if they discovered that in digital computers, if you linked too many transistors together, they all spontaneously lost their charge and went to 0. That would put a huge limitation on what a transistor-based digital computer was capable of doing. Until now, no one knew if such a limitation existed for quantum computers.\n\n\u201cThere\u2019s no new physics out there that will cause this to fail. That\u2019s a big takeaway,\u201d said Martines. \u201cWe see the same errors whether we have a simple circuit or complex one, meaning the errors are not dependent on computational complexity or entanglement \u2014 which means the complex quantum computing going on doesn\u2019t have fragility to it because you\u2019re doing a complex computation.\u201d\n\nThey operated a quantum computer at complexities higher than ever before, and nothing weird happens. And based on their observations and tests, they found that there\u2019s no reason to believe they can\u2019t take this same scheme up to, say, a thousand qubits and even greater complexity.\n\nHello world\n\nThat is the true accomplishment of the work the research team did. They found out, in the process of achieving the rather overhyped milestone of quantum superiority, that quantum computers are something that can continue to get better and to achieve more than simply an interesting experimental results.\n\nThis was by no means a given \u2014 like everything else in the world, quantum or classical, it\u2019s all theoretical until you test it.\n\nIt means that sometime soonish, though no one can really say when, quantum computers will be something people will use to accomplish real tasks. From here on out, it\u2019s a matter of getting better, not proving the possibility; of writing code, not theorizing whether code can be executed.\n\nIt\u2019s going from Feynman\u2019s proposal that a quantum computer will be needed to using a quantum computer for whatever you need it for. It\u2019s the \u201chello world\u201d moment for quantum computing.\n\nFeynman, by the way, would probably not be surprised. He knew he was right.\n\nGoogle\u2019s paper describing their work was published in the journal Nature. You can read it here.", "description": "Does quantum computing really exist? It\u2019s fitting that for decades this field has been haunted by the fundamental uncertainty of whether it would, eventually, prove to be a wild goose chase. But Google has collapsed this nagging superposition with research not just demonstrating what\u2019s called \u201cquantum supremacy,\u201d but more importantly showing that this also is [\u2026]", "authors": [], "top_image": "https://techcrunch.com/wp-content/uploads/2019/10/qubit-halo2.jpg?w=753", "published_at": "2019-10-26"}