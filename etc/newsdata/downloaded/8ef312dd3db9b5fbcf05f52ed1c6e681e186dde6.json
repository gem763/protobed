{"pub": "vice", "url": "https://vice.com/en_asia/article/bjwmqm/the-many-ways-planned-obsolescence-is-sabotaging-how-we-preserve-internet-history", "downloaded_at": "2019-09-09 23:17:48.447506+00:00", "title": "The Many Ways Planned Obsolescence Is Sabotaging How We Preserve Internet History", "language": "en", "text": "This article originally appeared on VICE US.\n\nA version of this post originally appeared on Tedium , a twice-weekly newsletter that hunts for the end of the long tail.\n\nThe world of technology has a problem, and it\u2019s not something that we\u2019re talking about nearly enough. That problem? We keep making old stuff significantly less useful in the modern day, sometimes by force.\n\nWe cite problems such as security, maintenance, and a devotion to constant evolution as reasons for allowing this to happen.\n\nBut the net effect is that we are making it impossible to continue using otherwise useful things after even a medium amount of time. I\u2019m not even exclusively talking about things that are decades old. Sometimes, just a few years does the trick.\n\nA quick case in point: Google has a set date for every type of Chromebook architecture to fall into an \u201cend of life\u201d status, where it will no longer be developed or updated, despite the fact that it\u2019s effectively the modern version of a dumb terminal.\n\nAnd the timeframe is surprisingly short\u2014just 6.5 years from the first use of the architecture, the machine will stop auto-updating, despite the fact an equivalent Windows machine will still be usable for years after that point.\n\nThere are some workarounds, including Linux distributions made specifically for Chromebooks, but the result is that computers that would still be completely usable with other operating systems are going to be pushed off the internet onramp in a few years\u2019 time.\n\nAnd that\u2019s just but one example. I have many more to share, and together, they paint a pretty dark picture for preservationists looking to capture a snapshot of time.\n\n*\n\n\u2014 Josh Malone, a vintage computer enthusiast, making the argument that old computers must have their batteries removed, in part because of how easily they get corroded and damaged, thereby further damaging the components inside of the machine. Even with changes in technology, with batteries more deeply embedded in the phones and laptops we buy, it\u2018s inevitable that this problem will only worsen over time.\n\nWe create devices that have batteries built to die\n\nI have a lot of old gadgets floating around my house these days, partly out of personal interest in testing things out, in hope of writing stories about the things that I find. Some of this stuff is on loan and requires extra research that simply takes time due to the huge amount of complexity involved. Other times, it\u2019s just an artifact that I think allows for telling an interesting story. I make weekly trips to Goodwill hoping to find the next interesting story in a random piece of what some might call junk.\n\nBut one issue keeps cropping up that I think is going to become even more prevalent in the years to come: Non-functional batteries.\n\nBattery technology and the circuitry that connects to it varies wildly, and it creates issues that prevent gadgets from living their best lives, in a huge part due to the slow decay of lithium-ion batteries.\n\nA prominent example of this, of course, are AirPods, highly attractive and functional tools that will slowly become less useful over time as their batteries go through hundreds of cycles and start to lose steam. But at the same time, AirPods are just an example of what is destined to happen to basically every set of Bluetooth headphones over time: The lithium-ion batteries driving them will slowly decay and turn a once-useful product into an object that must be continually replaced because a single part, the battery, cannot be replaced.\n\nOlder devices I\u2019ve been testing out have batteries so old that I cannot find replacements for them. (You\u2019ve not lived until you\u2019ve typed in a serial code for an old battery into Google and found out that the only search result for that serial code goes to a museum\u2019s website.) But newer batteries, despite being reliant on basically the same technology year after year, can\u2019t be easily replaced, leading these old batteries to decay with little room for user recourse.\n\nImage: Ernie Smith\n\nOne example I\u2019d like to bring to light in this context is the HP TouchPad, the WebOS-based tablet the company briefly sold during a period that it cared about the fate of WebOS. It\u2019s an interesting story, full of intrigue and even present-day Android updates.\n\n\n\nSimply put: Many of them will not charge up after being set aside for a while. Including mine. I knew this going in, but I thought it would be fun to see if I could pull off a desperate challenge.\n\nBut even though the device can be detected by another computer\u2014plugging it into a Linux machine and running a few Terminal commands makes it clear that the device is not only detected, but capable of being reimaged\u2014HP made some mistakes with its design of the battery on the TouchPad, and now if a device has been left uncharged for even a modestly extended period, the odds are good that the device is probably dead. Even when the device was relatively new charging issues were common.\n\nThe TouchPad is only eight years old, a historic novelty due to only being sold for a total of 49 days and with an OS that had a cult following. But design flaws mean that it\u2019s somewhat rare to find a working device in the wild, and revival is often a confusing mess of old pages in the Internet Archive and obscure Linux scripts that, in the right context, might just work.\n\nThis script works ... until it doesn't. Image: Ernie Smith\n\nI haven\u2019t given up on mine, but I\u2019ve read forum posts where some users have taken to putting their old TouchPads inside of an electric blanket, all for the cause of \u201cheating up\u201d the battery for just long enough that they can run the Linux reimaging script and get the machine to boot and charge.\n\n\n\nPutting a heating pad around a dead HP TouchPad reeks of desperation, but considering it\u2019s a nice if unloved tablet, desperate times call for weird tactics.\n\nBut it\u2019s not the only somewhat recent device I\u2019ve tried that seems to have odd battery-charging habits. I recently revived an old iPhone 6 Plus basically to keep a backup of my iOS data, and I find that the battery drains on its own, even when I\u2019m not using it, and a cheap Nuvision tablet designed for Windows 10 that I got for a steal has a tendency of being finicky about the kind of power outlets it likes and how long it will keep a charge.\n\nThe connecting thread of these devices is that they\u2019re not designed to be cracked open or repaired by users. But if we plan to keep them around into the present day, they have to be. Otherwise we\u2019re dealing with millions of nonfunctional bricks.\n\nThe Mac Mini that showed me there was going to be no way to relive mid-2000s internet. Image: Ernie Smith\n\nWe make no effort to allow vintage computers to live on the modern internet\n\nA decade ago, the biggest problem facing the internet was the large number of compatibility issues baked into Internet Explorer, a web browser that infamously stopped evolving for about half a decade, creating major issues that took years to sort out.\n\nWe\u2019re long past that point, but I\u2019d like to argue that, in many ways, we\u2019ve created the opposite problem.\n\nNow, our browsers are more standards-compliant than ever. But this has created an entire class of software, built on old operating systems, to have a degraded experience.\n\nThe problem comes down to security standards such as Transport Layer Security and the older Secure Sockets Layer, network protocols that were designed to help secure traffic. During the heyday of the early internet, https was used on only a few sites where secure use cases were recommended.\n\nBut since then, opinions in the security community have shifted on the use of https, for reasons of privacy and secure data. Google, in particular, forced the issue of dropping http, dangling the threat of a dropping search-engine position. Last year, Google Chrome took the step of marking http sites as \u201cnot secure,\u201d effectively shaming websites that ignore digital security standards.\n\nAt the same time, old security protocols such as SSL and TLS 1.0 have been discontinued in modern browsers, and many newer browsers require stronger types of encryption, such as SHA\u20132, which means that there are strong deterrents for running a web browser that is too old.\n\nSo now all these sites that didn\u2019t have to use https in the past are now using https because if they don\u2019t, it will hurt their traffic and their business. We\u2019ve forced security on millions of websites this way, and the broader internet has benefited greatly from this. It improves digital security in nearly all cases.\n\n\n\nBut for purposes of preservation, we\u2019ve put in additional layers that prevent correct use of old computers. From a research standpoint, this prevents an easy look at websites in their original context as we\u2019ve forced upgrades to support modern computers while actively discouraging efforts to support older ones.\n\nThis leads to situations where the only way to make an old internet-enabled computer even reasonably functional online is to use hacks that allow for a browser with modern security standards \u2026 or to switch to an alternate operating system. This is something I ran into earlier this year when I started using a 2005 Mac Mini as part of an experiment. But I\u2019ve also run into it within controlled environments like virtualization, and it made using the operating system unnecessarily hard, as I was unable to easily download things like drivers necessary for my use case.\n\nThere are a few die-hards out there that have not given into the https drumbeat. When I load up an old computer or an old browser, the first site I try is Jason Scott\u2019s textfiles.com, because it\u2019s the only one I know I can get to work without any problem. His decision to drop https for that site led him to run into a whole lot of debates online, but it may have been the best thing he could have done for collectors, historians, and preservationists\u2014now we have a place we KNOW will work when we\u2019re just trying to test an old piece of hardware or software, with no bullshit.\n\nWRP, the web-rendering proxy for retro browsers.\n\nWhat I would like to see are more attempts to push the new into the old on its own terms, with a great example coming from Google programmer Antoni Sawicki, who built a web-rendering proxy that effectively allows modern websites to run on outdated browsers. It effectively turns the modern website into a giant GIF that then can be used through a proxy layer.\n\n\n\nWe need more of this. At some point, we\u2019re going to want to collectively come back to these old tools to understand them, but we seem to be doing everything in our power to prevent them from getting online. There needs to be a balance.\n\nSorry, your app is built for a 32-bit architecture.\n\nWe\u2019re starting to close off support for older generations of apps in mainstream software\n\nThe most problematic issue that I see is one that\u2019s likely to become worse in the coming years.\n\nAnd we\u2019re about to get our first real taste of it in a mainstream desktop operating system.\n\nIn the coming weeks, Apple is likely to release Catalina, the latest version of macOS, which is going to drop support for all 32-bit apps, meaning that literally decades of work developed for prior versions of MacOS will become unusable.\n\nIt\u2019s not the first time Apple has done this\u2014the 2009 release of Mac OS X 10.6, Snow Leopard, formally pulled off the band aid of Power PC support\u2014but the decision to drop support for 32-bit apps is likely going to cut off a lot of tools that are intended to work on as many platforms as possible.\n\n\u201cThe technologies that define today\u2019s Mac experience\u2014such as Metal graphics acceleration\u2014work only with 64-bit apps,\u201d Apple explains of its decision on its website. \u201cTo ensure that the apps you purchase are as advanced as the Mac you run them on, all future Mac software will eventually be required to be 64-bit.\u201d\n\n(Apple even has a \u201cburn book\u201d of sorts, a configuration file where it specifically lists 235 apps that will no longer work with Catalina. Most are very old versions of software.)\n\nNow, this is great if your goal is to always be on the latest software, but many people run older software, for a variety of reasons. Some of the biggest? The software isn\u2019t being actively developed anymore, you prefer the older version for design and aesthetic reasons, or because it\u2019s something that isn\u2019t developed on a continuous release cycle, like a game.\n\nNow, if this debate was limited to Apple, that would be one thing, but the truth is, they\u2019re just an early adopter. Earlier this summer, Canonical, the company that develops Ubuntu, greatly upset a good portion of their user base after announcing that it was removing support for 32-bit applications, which would have basically made the Linux distribution useless for many games, harming a community that was just starting to warm to Linux. Eventually, Canonical backed down, after it became clear that the developer community was not the same as the user community.\n\n\u201cWe do think it\u2019s reasonable to expect the community to participate and to find the right balance between enabling the next wave of capabilities and maintaining the long tail,\u201d Canonical said in a statement.\n\nNow, there are always solutions that would allow the use of vintage or even obsolete software in modern contexts. Virtualization and emulation software like VirtualBox and QEMU create ways to recreate an experience. But these tools are often more technical and less seamless than native platforms they replace, and I worry that nobody is thinking of ways to make them easier for the average person to use.\n\nAnd, to be fair, there are definitely reasons to discourage the use of 32-bit software. As How-To Geeknotes, most Windows applications are made as 32-bit apps, in part because those have broader support over 64-bit apps, which are more future-proofed. That means a lot of developers aren\u2019t taking advantage of the latest technologies, despite clear advantages.\n\nBut as architectures change and technology evolves, I\u2019m convinced that there will be a time that old software loses the battle, all because we chose not to prioritize its long-term value.\n\nWe may be nostalgic, but the companies that make our devices quite often are not.\n\nWhy make such a big fuss about all this? After all, we know that planned obsolescence has long been a part of our digital lives, and that the cloud is less a permanent state, and more an evolving beast.\n\nBut that beast will be hard to document, and ultimately, its story needs to be preserved and interpreted, hopefully in the same context in which it was created. The technology we use today, however, does not allow for that to the degree in which it\u2019s needed. It highlights a dichotomy between the digital information that will be somewhat easy to protect and the physical portals to that data that have been built that will be harder to document because their basic function is tethered to the internet, and that tethering, for one reason or another, will inevitably break.\n\nI\u2019ve touched on this in the past, but I think the problem is actually more serious than I\u2019ve laid out, because we\u2019re barreling away from permanence and towards constant chaos.\n\nIn two decades, I can see this scenario playing out: A thirtysomething adult is going to think back one day to his or her days in middle school, and wax nostalgic for that old laptop they used back then. It\u2019s an old Chromebook their parents bought for them, covered in stickers like a Trapper Keeper circa 1984, and it holds memories of a specific time in their lives.\n\n\n\nInevitably, they\u2019ll open it up and try to turn it on \u2026 and honestly, it\u2019s not clear what might happen. Perhaps the machine won\u2019t turn on at all, due to TouchPad-like issues with the design of the power supply that require some sort of charge in the battery to function. Maybe they\u2019ll get lucky, and it\u2019ll turn on after they plug it in, even if the battery won\u2019t hold a charge. But then they try to log in \u2026 and they find that they can\u2019t log in due to a security protocol change Google strong-armed onto the internet a decade ago. Maybe we won\u2019t use passwords at all anymore, meaning there\u2019s no easy way to log in. Maybe they\u2019ll figure out a way to get around the error screen, only to load up a website, and find that it won\u2019t load, due to the fact that it uses a web standard that wasn\u2019t even invented back then.\n\nUnlike early computers that still make their pleasures functionally accessible with the flip of a switch (and admittedly a recapping and possibly a little retrobrite), this machine, an artifact of someone\u2019s past, could likely become functionally useless.\n\nAll because Google decided to stop supporting the machines, despite the fact that they were still perfectly functional, due to some structured plan for obsolescence.\n\nNow apply that thought process to every device you currently own\u2014or owned just a few years ago\u2014and you can see where this is going.\n\nWe\u2019re allowing the present to conspire against the past in the name of the future.\n\nWe\u2019re endangering nostalgia, something important to the way we see the world even as it\u2019s frequently imperfect, due to technology that at one point was seen as a boon for progress.\n\nWe\u2019re making it much harder to objectively document the information in its original context. And the same companies that are forcing us into this brave new world where we\u2019re deleting history as fast as we\u2019re creating it should help us fix it.\n\nBecause it will be way too late to do so later.", "description": "We keep screwing over yesterday\u2019s technology due to an intent focus on what we\u2019re doing today. The problem of planned obsolescence is only getting worse.", "authors": [], "top_image": "https://video-images.vice.com/articles/5d7181e7522dfa0008825c8f/lede/1567719914166-Screen-Shot-2019-09-05-at-54439-PM.png?crop=1xw:0.9945xh;center,center&resize=1200:*", "published_at": "2019-09-09"}