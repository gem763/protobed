{"pub": "techcrunch", "url": "https://techcrunch.com/2019/10/08/arm-brings-custom-instructions-to-its-embedded-cpus", "downloaded_at": "2019-10-09 00:26:22.119671+00:00", "title": "Arm brings custom instructions to its embedded CPUs \u2013 TechCrunch", "language": "en", "text": "At its annual TechCon event in San Jose, Arm today announced Custom Instructions, a new feature of its Armv8-M architecture for embedded CPUs that, as the name implies, enables its customers to write their own custom instructions to accelerate their specific use cases for embedded and IoT applications.\n\n\u201cWe already have ways to add acceleration, but not as deep and down to the heart of the CPU. What we\u2019re giving [our customers] here is the flexibility to program your own instructions, to define your own instructions \u2014 and have them executed by the CPU,\u201d ARM senior director for its automotive and IoT business, Thomas Ensergueix, told me ahead of today\u2019s announcement.\n\nHe noted that Arm always had a continuum of options for acceleration, starting with its memory-mapped architecture for connecting over a bus GPUs and today\u2019s neural processor units. This allows the CPU and the accelerator to run in parallel, but with the bus being the bottleneck. Customers also can opt for a co-processor that\u2019s directly connected to the CPU, but today\u2019s news essentially allows Arm customers to create their own accelerated algorithms that then run directly on the CPU. That means the latency is low, but it\u2019s not running in parallel, as with the memory-mapped solution.\n\nAs Arm argues, this setup allows for the lowest-cost (and risk) path for integrating customer workload acceleration, as there are no disruptions to the existing CPU features and it still allows its customers to use the existing standard tools with which they are already familiar.\n\nFor now, custom instructions will only be available to be implemented in the Arm Cortex-M33 CPUs, starting in the first half of 2020. By default, it\u2019ll also be available for all future Cortex-M processors. There are no additional costs or new licenses to buy for Arm\u2019s customers.\n\nEnsergueix noted that as we\u2019re moving to a world with more and more connected devices, more of Arm\u2019s customers will want to optimize their processors for their often very specific use cases \u2014 and often they\u2019ll want to do so because by creating custom instructions, they can get a bit more battery life out of these devices, for example.\n\nArm has already lined up a number of partners to support Custom Instructions, including IAR Systems, NXP, Silicon Labs and STMicroelectronics .\n\n\u201cArm\u2019s new Custom Instructions capabilities allow silicon suppliers like NXP to offer their customers a new degree of application-specific instruction optimizations to improve performance, power dissipation and static code size for new and emerging embedded applications,\u201d writes NXP\u2019s Geoff Lees, SVP and GM of Microcontrollers. \u201cAdditionally, all these improvements are enabled within the extensive Cortex-M ecosystem, so customers\u2019 existing software investments are maximized.\u201d\n\nIn related embedded news, Arm also today announced that it is setting up a governance model for Mbed OS, its open-source operating system for embedded devices that run an Arm Cortex-M chip. Mbed OS has always been open source, but the Mbed OS Partner Governance model will allow Arm\u2019s Mbed silicon partners to have more of a say in how the OS is developed through tools like a monthly Product Working Group meeting. Partners like Analog Devices, Cypress, Nuvoton, NXP, Renesas, Realtek,\n\nSamsung and u-blox are already participating in this group.", "description": "At its annual TechCon event in San Jose, Arm today announced Custom Instructions, a new feature of its Armv8-M architecture for embedded CPUs that, as the name implies, enables its customers to write their own custom instructions to accelerate their specific use cases for embedded and IoT applications. \u201cWe already have ways to add acceleration, [\u2026]", "authors": [], "top_image": "https://techcrunch.com/wp-content/uploads/2019/03/GettyImages-1128091493.jpeg?w=600", "published_at": "2019-10-08"}